# HTML
# Archive your static HTML project and save it with the build record.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: "AzureCLI@2"
  displayName: "Terraform"
  inputs:
          azureSubscription:  very_interesting_not_suspicious_connection
          scriptType: bash
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_SUBSCRIPTION_ID=$(az keyvault secret show --name ARM-SUBSCRIPTION-ID --vault-name test1-res-key-vault --query value -o tsv)
            export ARM_CLIENT_ID=$(az keyvault secret show --name ARM-CLIENT-ID --vault-name test1-res-key-vault --query value -o tsv)
            export ARM_CLIENT_SECRET=$(az keyvault secret show --name ARM-CLIENT-SECRET --vault-name test1-res-key-vault --query value -o tsv)
            export ARM_TENANT_ID=$(az keyvault secret show --name ARM-TENANT-ID --vault-name test1-res-key-vault --query value -o tsv)
            export AZURE_CLIENT_ID=$(az keyvault secret show --name ARM-CLIENT-ID --vault-name test1-res-key-vault --query value -o tsv)
            export AZURE_CLIENT_SECRET=$(az keyvault secret show --name ARM-CLIENT-SECRET --vault-name test1-res-key-vault --query value -o tsv)
            export AZURE_TENANT_ID=$(az keyvault secret show --name ARM-TENANT-ID --vault-name test1-res-key-vault --query value -o tsv)
            export TF_VAR_VAULT_URI=$(az keyvault secret show --name TF-VAR-VAULT-URI --vault-name test1-res-key-vault --query value -o tsv)

            terraform init
            terraform plan

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(build.sourcesDirectory)'
    includeRootFolder: false
# - task: PublishBuildArtifacts@1
